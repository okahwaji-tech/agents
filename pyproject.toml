[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "agents"
version = "0.1.0"
description = "LLM & Agentic Workflows Learning Guide"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "torch",
    "scikit-learn",
    "langchain",
    "openai",
    "deepseek",
    "google-generativeai",
    "jupyterlab",
    "torchvision>=0.22.0",
    "torchaudio>=2.7.0",
    "transformers>=4.52.4",
    "datasets>=3.6.0",
    "tokenizers>=0.21.1",
    "matplotlib>=3.10.3",
    "seaborn>=0.13.2",
    "accelerate", # Hugging Face acceleration library for Apple Silicon
    "pytorch-lightning",
    "mkdocs>=1.6.1",
    "mkdocs-material>=9.6.14",
    "mkdocs-glightbox>=0.4.0",
    "mkdocs-jupyter>=0.25.1",
    "mkdocs-git-revision-date-localized-plugin>=1.4.7",
    "mkdocs-awesome-pages-plugin>=2.10.1",
    "mkdocs-minify-plugin>=0.8.0",
]

[project.optional-dependencies]
dev = [
    "ruff",
    "mypy",
    "pytest",
    "poethepoet",
    "jupyterlab"
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.4.0",
    "mkdocs-jupyter>=0.24.0",
    "pymdown-extensions>=10.0.0",
    "mkdocs-git-revision-date-localized-plugin>=1.2.0",
    "mkdocs-awesome-pages-plugin>=2.9.0",
    "mkdocs-macros-plugin>=1.0.0",
    "mkdocs-glightbox>=0.3.0",
    "mkdocs-minify-plugin>=0.7.0"
]

[tool.ruff]
line-length = 88

[tool.mypy]

[tool.pytest.ini_options]
addopts = "-q"

[tool.poe.tasks.format]
cmd = "ruff format ."

[tool.poe.tasks.lint]
cmd = "ruff check ."

[tool.poe.tasks.typecheck]
cmd = "mypy ."

[tool.poe.tasks.test]
cmd = "pytest"

[tool.poe.tasks.clean_cache]
script = "scripts/clean_cache.py"

[tool.poe.tasks.check_all]
sequence = ["format", "lint", "typecheck", "test"]

[tool.poe.tasks.docs-serve]
cmd = "mkdocs serve"
help = "Serve documentation locally for development"

[tool.poe.tasks.docs-build]
cmd = "mkdocs build"
help = "Build documentation for production"

[tool.poe.tasks.docs-deploy]
cmd = "mkdocs gh-deploy"
help = "Deploy documentation to GitHub Pages"

[tool.setuptools.packages.find]
where = ["."]
include = ["agents*"]
exclude = ["docs*", "materials*", "code*", "scripts*"]

[tool.setuptools.package-data]
"*" = ["*.md", "*.txt", "*.yml", "*.yaml"]
